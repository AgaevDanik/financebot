import os

from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,)
from telegram.ext import (
    CallbackContext,
    Updater,
    Filters,
    MessageHandler,)
from base import (
    take_statistic,
    clear_about_user,
    for_balance,
    take_text,
    logic_update,
    logic_insert,
    insert_in_account,
    update_in_account_plus,
    update_in_account_minus,
    insert_in_users,
    sellect_from_users,
)


def button_start_handler(chat_id, main_markup, update: Update, context: CallbackContext):
    user_name = update.message.chat.first_name
    print(user_name)
    if sellect_from_users(chat_id):
        update.message.reply_text(
            text='why did you wrote this?',
            reply_markup=main_markup,
        )
        logic_update(chat_id, '/start')
    else:
        update.message.reply_text(
            text=f'–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç GodFinance. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç '
                 '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Å—Ö–æ–¥–æ–≤. –ü–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ '
                 '–Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É. –£–¥–∞—á–∏! –î–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'
                 ' –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ "&" –ü—Ä–∏–º–µ—Ä: "–û–±—Ä–∞—â–µ–Ω–∏–µ &".'
                 ' –û–Ω –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
            reply_markup=main_markup,
        )
        insert_in_users(chat_id, user_name)
        insert_in_account(chat_id)
        logic_insert(chat_id, '/start')


def button_transport_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')


def button_food_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–ü—Ä–æ–¥—É–∫—Ç—ã')


def button_dress_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–û–¥–µ–∂–¥–∞')


def button_goods_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–ü—Ä–µ–¥–º–µ—Ç—ã')


def button_payments_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–ü–ª–∞—Ç–µ–∂–∏')


def button_other_handler(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—É—é —Å—É–º–º—É',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å–ü—Ä–æ—á–µ–µ')


def button_balance_handler(chat_id, text, update: Update, context: CallbackContext,):
    balance = for_balance(chat_id)
    text = f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑–∞–Ω–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è\n–í–∞—à –±–∞–ª–∞–Ω—Åüíµ:{balance["–ë–∞–ª–∞–Ω—Å"]}\n–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ ‚ùå: {balance["–ü–æ—Ç—Ä–∞—á–µ–Ω–æ"]}\n' \
           f'–í—ã –ó–∞—Ä–∞–±–æ—Ç–∞–ª–∏ü§ë: {balance["–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ"]}'
    update.message.reply_text(
        text=text,
    )


def button_add_handler(chat_id, text, update: Update, context: CallbackContext,):
    add_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'),
                KeyboardButton(text='–ü—Ä–æ–¥—É–∫—Ç—ã')
            ],
            [
                KeyboardButton(text='–û–¥–µ–∂–¥–∞'),
                KeyboardButton(text='–ü—Ä–µ–¥–º–µ—Ç—ã')
            ],
            [
                KeyboardButton(text='–ü—Ä–µ–¥–º–µ—Ç—ã'),
                KeyboardButton(text='–ü–ª–∞—Ç–µ–∂–∏')
            ],
            [
                KeyboardButton(text='–ü—Ä–æ—á–µ–µ'),
                KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            ],
        ],
        resize_keyboard=True,
    )
    update.message.reply_text(
        text='–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
        reply_markup=add_markup,
    )
    logic_update(chat_id, '/start(-) –ú–∏–Ω—É—Å')


def button_not_add_handler(chat_id, text, update: Update, context: CallbackContext):
    plus_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='–†–∞–±–æ—Ç–∞'),
                KeyboardButton(text='–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å')
            ],
            [
                KeyboardButton(text='–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è'),
                KeyboardButton(text='–î—Ä—É–≥–æ–µ')
            ],
            [
                KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            ],

        ],
        resize_keyboard=True,
    )
    update.message.reply_text(
        text='–í—ã–±–µ—Ä–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞',
        reply_markup=plus_markup,
    )
    logic_update(chat_id, '/start(+) –ü–ª—é—Å')


def button_statistic_minus_handler(main_markup, chat_id, text, update: Update, context: CallbackContext):
    state = take_statistic(chat_id, '-')
    update.message.reply_text(
        text=f'–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è\n'
             f'–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {state["–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"]}\n'
             f'–ü—Ä–æ–¥—É–∫—Ç—ã: {state["–ü—Ä–æ–¥—É–∫—Ç—ã"]}\n'
             f'–û–¥–µ–∂–¥–∞: {state["–û–¥–µ–∂–¥–∞"]}\n'
             f'–ü—Ä–µ–¥–º–µ—Ç—ã: {state["–ü—Ä–µ–¥–º–µ—Ç—ã"]}\n'
             f'–ü–ª–∞—Ç–µ–∂–∏: {state["–ü–ª–∞—Ç–µ–∂–∏"]}\n'
             f'–ü—Ä–æ—á–µ–µ: {state["–ü—Ä–æ—á–µ–µ"]}\n ',
        reply_markup=main_markup,
    )
    logic_update(chat_id, '/start')


def button_statistic_plus_handler(main_markup, chat_id, text, update: Update, context: CallbackContext):
    state = take_statistic(chat_id, '+')
    update.message.reply_text(
        text=f'–í–∞—à –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è\n'
             f'–†–∞–±–æ—Ç–∞: {state["–†–∞–±–æ—Ç–∞"]}\n'
             f'–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å: {state["–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å"]}\n'
             f'–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è: {state["–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è"]}\n'
             f'–î—Ä—É–≥–æ–µ: {state["–î—Ä—É–≥–æ–µ"]}\n',
        reply_markup=main_markup,
    )
    logic_update(chat_id, '/start')


def button_clear_handler(main_markup, chat_id, text, update: Update, context: CallbackContext):
    clear_about_user(chat_id)
    logic_update(chat_id, '/start')
    update.message.reply_text(
        text='–í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω—É–ª–µ–Ω',
        reply_markup=main_markup,
    )


def button_help_handler(chat_id, text, update: Update, context: CallbackContext):
    user_name = update.message.chat.first_name + update.message.chat.last_name
    update.message.reply_text(
        text=f'–ü—Ä–∏–≤–µ—Ç {user_name}, –º–µ–Ω—è –∑–æ–≤—É—Ç GodFinance. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç '
             '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞—Å—Å—Ö–æ–¥–æ–≤. –ü–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ '
             '–Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É. –£–¥–∞—á–∏! –î–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'
             ' –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ "&" –ü—Ä–∏–º–µ—Ä: "–û–±—Ä–∞—â–µ–Ω–∏–µ &".'
             ' –û–Ω –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
    )


def button_action_handler(chat_id, text, update: Update, context: CallbackContext):
    action_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤'),
                KeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤')
            ],
            [
                KeyboardButton(text='–û–±–Ω—É–ª–∏—Ç—å —Å—á—ë—Ç'),
                KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            ],
        ]
    )
    update.message.reply_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
        reply_markup=action_markup
    )
    logic_update(chat_id, '/start –î–µ–π—Å—Ç–≤–∏—è')


def button_some_else(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(+) –ü–ª—é—Å–î—Ä—É–≥–æ–µ')


def button_work(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(+) –ü–ª—é—Å–†–∞–±–æ—Ç–∞')


def button_present(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(+) –ü–ª—é—Å–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è')


def button_business(chat_id, text, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞',
        reply_markup=ReplyKeyboardRemove(),
    )
    logic_update(chat_id, '/start(+) –ü–ª—é—Å–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å')


def button_menu_handler(main_markup, chat_id, update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–ú–µ–Ω—é:',
        reply_markup=main_markup,
    )
    logic_update(chat_id, '/start')


def message_handler(update: Update, context: CallbackContext):
    chat_id = update.message.chat.id
    text = update.message.text
    main_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='(+) –ü–ª—é—Å'),
                KeyboardButton(text='(-) –ú–∏–Ω—É—Å')
            ],
            [
                KeyboardButton(text='–ë–∞–ª–∞–Ω—Å'),
                KeyboardButton(text='–î–µ–π—Å—Ç–≤–∏—è'),
            ],
            [
                KeyboardButton(text='–ü–æ–º–æ—â—å')
            ],
        ],
        resize_keyboard=True,
    )
    answers = {
        '–ë–∞–ª–∞–Ω—Å': button_balance_handler,
        '–ü–æ–º–æ—â—å': button_help_handler,
        '(-) –ú–∏–Ω—É—Å': button_add_handler,
        '(+) –ü–ª—é—Å': button_not_add_handler,
        '–î–µ–π—Å—Ç–≤–∏—è': button_action_handler,
    }
    answers_minus = {
        '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç': button_transport_handler,
        '–ü—Ä–æ–¥—É–∫—Ç—ã': button_food_handler,
        '–û–¥–µ–∂–¥–∞': button_dress_handler,
        '–ü—Ä–µ–¥–º–µ—Ç—ã': button_goods_handler,
        '–ü–ª–∞—Ç–µ–∂–∏': button_payments_handler,
        '–ü—Ä–æ—á–µ–µ': button_other_handler,
    }
    answers_plus = {
        '–†–∞–±–æ—Ç–∞': button_work,
        '–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å': button_business,
        '–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è': button_present,
        '–î—Ä—É–≥–æ–µ': button_some_else,
    }
    answers_action = {
        '–û–±–Ω—É–ª–∏—Ç—å —Å—á—ë—Ç': button_clear_handler,
        '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤': button_statistic_minus_handler,
        '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤': button_statistic_plus_handler,
    }
    text_for_answers_minus_sphere = [
        '/start(-) –ú–∏–Ω—É—Å–û–¥–µ–∂–¥–∞',
        '/start(-) –ú–∏–Ω—É—Å–ü—Ä–µ–¥–º–µ—Ç—ã',
        '/start(-) –ú–∏–Ω—É—Å–ü–ª–∞—Ç–µ–∂–∏',
        '/start(-) –ú–∏–Ω—É—Å–ü—Ä–æ—á–µ–µ',
        '/start(-) –ú–∏–Ω—É—Å–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
        '/start(-) –ú–∏–Ω—É—Å–ü—Ä–æ–¥—É–∫—Ç—ã'
    ]
    text_for_answer_plus_sphere = [
        '/start(+) –ü–ª—é—Å–î—Ä—É–≥–æ–µ',
        '/start(+) –ü–ª—é—Å–î–µ–ª–æ/–ë–∏–∑–Ω–µ—Å—Å',
        '/start(+) –ü–ª—é—Å–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è',
        '/start(+) –ü–ª—é—Å–†–∞–±–æ—Ç–∞',
    ]
    if text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        button_menu_handler(main_markup, chat_id, update=update, context=context)
    if text == '/start':
        button_start_handler(chat_id, main_markup, update=update, context=context)
    elif take_text(chat_id) == '/start':
        if answers.get(text, None):
            answers.get(text)(chat_id, text, update=update, context=context)
    elif take_text(chat_id) == '/start(-) –ú–∏–Ω—É—Å':
        if answers_minus.get(text, None):
            answers_minus.get(text)(chat_id, text, update=update, context=context)
    elif take_text(chat_id) == '/start(+) –ü–ª—é—Å':
        if answers_plus.get(text, None):
            answers_plus.get(text)(chat_id, text, update=update, context=context)
    elif take_text(chat_id) == '/start –î–µ–π—Å—Ç–≤–∏—è':
        if answers_action.get(text, None):
            answers_action.get(text)(main_markup, chat_id, text, update=update, context=context)
    elif take_text(chat_id) in text_for_answers_minus_sphere:
        sphere = take_text(chat_id)
        sphere = sphere.replace('/start(-) –ú–∏–Ω—É—Å', '')
        update_in_account_minus(chat_id, sphere, float(text))
        logic_update(chat_id, '/start')
        update.message.reply_text(
            text='‚úÖ‚úÖ‚úÖ',
            reply_markup=main_markup,
        )
    elif take_text(chat_id) in text_for_answer_plus_sphere:
        sphere = take_text(chat_id)
        sphere = sphere.replace('/start(+) –ü–ª—é—Å', '')
        update_in_account_plus(chat_id, sphere, float(text))
        logic_update(chat_id, '/start')
        update.message.reply_text(
            text='‚úÖ‚úÖ‚úÖ',
            reply_markup=main_markup,
        )
    else:
        pass


def main():
    updater = Updater(
        token=os.environ.get('TOKEN'),
        use_context=True
    )

    updater.dispatcher.add_handler(MessageHandler(filters=Filters.all, callback=message_handler))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
